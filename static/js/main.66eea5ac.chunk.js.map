{"version":3,"sources":["components/Container/Container.styles.jsx","components/Container/Container.jsx","components/Statistics/Statistics.styles.jsx","components/Statistics/Statistics.jsx","components/Section/Section.styles.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.styles.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.styles.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["Container","styled","div","propTypes","children","PropTypes","node","Containers","Text","p","Statistics","good","neutral","bad","total","positivePercentage","Title","h2","Section","title","Button","button","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","type","name","onClick","NotificationText","Notification","message","countReducer","prevState","nextState","App","useReducer","setGood","setNeutral","setBad","countTotalFeedback","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAEaA,EAAYC,IAAOC,IAAV,uS,uBCOtBF,EAAUG,UAAY,CACpBC,SAAUC,IAAUC,MAGPC,I,QAAAA,EAVI,SAAC,GAAkB,IAAhBH,EAAe,EAAfA,SACpB,OACE,cAACJ,EAAD,UAAYI,KCHHI,EAAOP,IAAOQ,EAAV,uC,OCqBFC,EAlBI,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,IAAKC,EAAtB,EAAsBA,MAAtB,IAA6BC,0BAA7B,MAAgD,MAAhD,SACX,+BACI,eAACP,EAAD,WAAM,cAAC,IAAD,IAAN,UAAwBG,KACxB,eAACH,EAAD,WAAM,cAAC,IAAD,IAAN,aAA+BI,KAC/B,eAACJ,EAAD,WAAM,cAAC,IAAD,IAAN,SAA0BK,KAC1B,eAACL,EAAD,qBAAcM,KACd,eAACN,EAAD,iCAA0BO,EAA1B,WCTCC,EAAQf,IAAOgB,GAAV,2CCaHC,EAZC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOf,EAAT,EAASA,SAAT,OACR,oCACQ,cAACY,EAAD,UAAQG,IACNf,MCJLgB,EAAQnB,IAAOoB,OAAT,wVCoBJC,EAnBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACZ,8BACKC,OAAOC,KAAKH,GAASI,KAAI,SAACC,GAAD,OACtB,cAACR,EAAD,CAEIS,KAAK,SACLC,KAAMF,EACNG,QAAS,kBAAMP,EAAgBI,IAJnC,SAKKA,GAJIA,SCLhBI,EAAmB/B,IAAOQ,EAAV,uCCWdwB,EAVM,SAAC,GAAc,IAAbC,EAAY,EAAZA,QACnB,OACI,cAACF,EAAD,UAAmBE,KCE3B,SAASC,EAAaC,EAAWC,GAC/B,OAAOD,EAAYC,EA6DNC,MA1Df,WAEE,MAAwBC,qBAAWJ,EAAc,GAAjD,mBAAOxB,EAAP,KAAa6B,EAAb,KACA,EAA8BD,qBAAWJ,EAAc,GAAvD,mBAAOvB,EAAP,KAAgB6B,EAAhB,KACA,EAAsBF,qBAAWJ,EAAc,GAA/C,mBAAOtB,EAAP,KAAY6B,EAAZ,KAsBQC,EAAqB,WACzB,OAAOhC,EAAOC,EAAUC,GAQ5B,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASM,MAAM,0BAEf,cAAC,EAAD,CACEI,QAAS,CAACZ,OAAMC,UAASC,OACrBW,gBAnCe,SAACK,GACxB,OAAQA,GAEN,IAAK,OACHW,EAAQ,GACR,MAEF,IAAK,UACHC,EAAW,GACX,MAEF,IAAK,MACHC,EAAO,GACP,MAEF,QACE,WAqBD,cAAC,EAAD,CAASvB,MAAM,eACfwB,IACC,cAAC,EAAD,CACEhC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO6B,IACP5B,mBAnBG6B,KAAKC,MAAOlC,EAAOgC,IAAwB,OAqBhD,cAAC,EAAD,CAAcT,QAAQ,0BC1D9BY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.66eea5ac.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\n\r\nexport const Container = styled.div`\r\n  width: 500px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: 50px;\r\n  text-align: center;\r\n  border: dashed 5px rgba(5, 30, 255, 0.144);\r\n  border-radius: 10px;\r\n  padding: 30px;\r\n\r\n  &:hover{\r\n    box-shadow: 0 0 50px rgba(5, 30, 255, 0.596)\r\n  }\r\n`\r\n","import { Container } from './Container.styles';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Containers = ({ children }) => {\r\n  return (\r\n    <Container>{children}</Container>\r\n    )\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n}\r\n\r\nexport default Containers;","import styled from '@emotion/styled'\r\n\r\nexport const Text = styled.p`\r\nmargin:0;\r\n`","  \r\nimport PropTypes from \"prop-types\";\r\nimport { Text } from './Statistics.styles';\r\nimport { CgSmile, CgSmileNone, CgSmileSad } from 'react-icons/cg'\r\n\r\nconst Statistics = ({good, neutral, bad, total, positivePercentage=\"100\"}) => (\r\n        <ul>\r\n            <Text><CgSmile/> Good: {good}</Text>\r\n            <Text><CgSmileNone/> Neutral: {neutral}</Text>\r\n            <Text><CgSmileSad/> Bad: {bad}</Text>\r\n            <Text>Total: {total}</Text>\r\n            <Text>Positive feedback: {positivePercentage}%</Text>   \r\n        </ul>\r\n        )\r\n\r\n  Statistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;","import styled from '@emotion/styled';\r\n\r\nexport const Title = styled.h2`\r\nfont-size: 2em;`\r\n","import PropTypes from \"prop-types\";\r\nimport { Title } from './Section.styles';\r\n\r\nconst Section = ({title, children}) => (\r\n        <section>\r\n                <Title>{title}</Title>\r\n                { children }\r\n        </section>\r\n        )\r\n\r\nSection.propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n  \r\n\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Button =styled.button`\r\n  width: 90px;\r\n  border: solid 1px rgb(148, 146, 146);\r\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\r\n  font-size: 15px;\r\n  font-weight: 700;\r\n  margin-right: 10px;\r\n  border-radius: 10px;\r\n  padding: 5px;\r\n  background: none;\r\n  cursor: pointer;\r\n\r\n  &:hover{\r\n    box-shadow: 0 0 20px rgba(5, 30, 255, 0.829);\r\n  }\r\n`;","import PropTypes from \"prop-types\";\r\nimport { Button } from './FeedbackOptions.styles.jsx';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n            <div>\r\n                {Object.keys(options).map((option) => (\r\n                    <Button\r\n                        key={option}\r\n                        type=\"button\"\r\n                        name={option}\r\n                        onClick={() => onLeaveFeedback(option)}>\r\n                        {option}\r\n                    </Button>\r\n    ))}\r\n            </div>\r\n        )\r\n    \r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import styled from '@emotion/styled'\r\n\r\nexport const NotificationText = styled.p`\r\nmargin:0;\r\n`","import PropTypes from \"prop-types\";\r\nimport { NotificationText } from './Notification.styles';\r\n\r\nconst Notification = ({message}) =>{\r\n    return(\r\n        <NotificationText>{message}</NotificationText>\r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import { useReducer } from 'react'\nimport Container from './components/Container'\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\n\nfunction countReducer(prevState, nextState) {\n  return prevState + nextState\n}\n\nfunction App() {\n  \n  const [good, setGood] = useReducer(countReducer, 0)\n  const [neutral, setNeutral] = useReducer(countReducer, 0)\n  const [bad, setBad] = useReducer(countReducer, 0)\n\n  const handleIncreament = (type) => {\n    switch (type) {\n\n      case 'good':\n        setGood(1)\n        break\n\n      case 'neutral':\n        setNeutral(1)\n        break\n\n      case 'bad':\n        setBad(1)\n        break\n\n      default:\n        return\n    }\n  }\n\n    const countTotalFeedback = () => {\n      return good + neutral + bad;\n    }\n\n    const countPositivePercentage = () => {\n      return Math.round((good / countTotalFeedback()) * 100)\n    }\n  \n\n  return (\n    <Container>\n      <Section title=\"Please leave feedback\"/>\n\n      <FeedbackOptions\n        options={{good, neutral, bad }}\n            onLeaveFeedback={handleIncreament}\n      />\n       <Section title=\"Statictics\"/>\n      {countTotalFeedback() ? (\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback()}\n          positivePercentage={countPositivePercentage()} />\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </Container>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}